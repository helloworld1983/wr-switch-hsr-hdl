/*
  Register definitions for slave core: WR Switch HSR LRE registers

  * File           : hsr_lre_regs.h
  * Author         : auto-generated by wbgen2 from hsr_lre_regs.wb
  * Created        : Mon Aug  1 11:00:58 2016
  * Standard       : ANSI C

    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE hsr_lre_regs.wb
    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!

*/

#ifndef __WBGEN2_REGDEFS_HSR_LRE_REGS_WB
#define __WBGEN2_REGDEFS_HSR_LRE_REGS_WB

#include <inttypes.h>

#if defined( __GNUC__)
#define PACKED __attribute__ ((packed))
#else
#error "Unsupported compiler?"
#endif

#ifndef __WBGEN2_MACROS_DEFINED__
#define __WBGEN2_MACROS_DEFINED__
#define WBGEN2_GEN_MASK(offset, size) (((1<<(size))-1) << (offset))
#define WBGEN2_GEN_WRITE(value, offset, size) (((value) & ((1<<(size))-1)) << (offset))
#define WBGEN2_GEN_READ(reg, offset, size) (((reg) >> (offset)) & ((1<<(size))-1))
#define WBGEN2_SIGN_EXTEND(value, bits) (((value) & (1<<bits) ? ~((1<<(bits))-1): 0 ) | (value))
#endif


/* definitions for register: LRE Control Register */

/* definitions for field: LRE reset in reg: LRE Control Register */
#define LRE_LCR_RST_N                         WBGEN2_GEN_MASK(0, 1)

/* definitions for field: LRE enable in reg: LRE Control Register */
#define LRE_LCR_EN                            WBGEN2_GEN_MASK(1, 1)

/* definitions for field: HSR / PRP mode in reg: LRE Control Register */
#define LRE_LCR_MODE_MASK                     WBGEN2_GEN_MASK(2, 4)
#define LRE_LCR_MODE_SHIFT                    2
#define LRE_LCR_MODE_W(value)                 WBGEN2_GEN_WRITE(value, 2, 4)
#define LRE_LCR_MODE_R(reg)                   WBGEN2_GEN_READ(reg, 2, 4)

/* definitions for field: HSR Path in reg: LRE Control Register */
#define LRE_LCR_HSR_PATH_MASK                 WBGEN2_GEN_MASK(6, 4)
#define LRE_LCR_HSR_PATH_SHIFT                6
#define LRE_LCR_HSR_PATH_W(value)             WBGEN2_GEN_WRITE(value, 6, 4)
#define LRE_LCR_HSR_PATH_R(reg)               WBGEN2_GEN_READ(reg, 6, 4)

/* definitions for register: LRE MAC address high part register */

/* definitions for register: Endpoint MAC address low part register */

/* definitions for register: Ep0 forwarded frames */

/* definitions for register: Ep1 forwarded frames */

/* definitions for register: Ep0 dropped frames */

/* definitions for register: Ep1 dropped frames */

/* definitions for register: Ep0 accepted frames */

/* definitions for register: Ep1 accepted frames */

PACKED struct LRE_WB {
  /* [0x0]: REG LRE Control Register */
  uint32_t LCR;
  /* [0x4]: REG LRE MAC address high part register */
  uint32_t MACH;
  /* [0x8]: REG Endpoint MAC address low part register */
  uint32_t MACL;
  /* [0xc]: REG Ep0 forwarded frames */
  uint32_t FWD_EP0;
  /* [0x10]: REG Ep1 forwarded frames */
  uint32_t FWD_EP1;
  /* [0x14]: REG Ep0 dropped frames */
  uint32_t DISC_EP0;
  /* [0x18]: REG Ep1 dropped frames */
  uint32_t DISC_EP1;
  /* [0x1c]: REG Ep0 accepted frames */
  uint32_t ACC_EP0;
  /* [0x20]: REG Ep1 accepted frames */
  uint32_t ACC_EP1;
};

#endif
